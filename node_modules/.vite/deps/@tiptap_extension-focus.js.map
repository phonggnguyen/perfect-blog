{
  "version": 3,
  "sources": ["../../@tiptap/extension-focus/src/focus.ts"],
  "sourcesContent": ["import { Extension } from '@tiptap/core'\nimport { Plugin, PluginKey } from 'prosemirror-state'\nimport { Decoration, DecorationSet } from 'prosemirror-view'\n\nexport interface FocusOptions {\n  className: string,\n  mode: 'all' | 'deepest' | 'shallowest',\n}\n\nexport const FocusClasses = Extension.create<FocusOptions>({\n  name: 'focus',\n\n  addOptions() {\n    return {\n      className: 'has-focus',\n      mode: 'all',\n    }\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      new Plugin({\n        key: new PluginKey('focus'),\n        props: {\n          decorations: ({ doc, selection }) => {\n            const { isEditable, isFocused } = this.editor\n            const { anchor } = selection\n            const decorations: Decoration[] = []\n\n            if (!isEditable || !isFocused) {\n              return DecorationSet.create(doc, [])\n            }\n\n            // Maximum Levels\n            let maxLevels = 0\n\n            if (this.options.mode === 'deepest') {\n              doc.descendants((node, pos) => {\n                if (node.isText) {\n                  return\n                }\n\n                const isCurrent = anchor >= pos && anchor <= (pos + node.nodeSize - 1)\n\n                if (!isCurrent) {\n                  return false\n                }\n\n                maxLevels += 1\n              })\n            }\n\n            // Loop through current\n            let currentLevel = 0\n\n            doc.descendants((node, pos) => {\n              if (node.isText) {\n                return false\n              }\n\n              const isCurrent = anchor >= pos && anchor <= (pos + node.nodeSize - 1)\n\n              if (!isCurrent) {\n                return false\n              }\n\n              currentLevel += 1\n\n              const outOfScope = (this.options.mode === 'deepest' && maxLevels - currentLevel > 0)\n                || (this.options.mode === 'shallowest' && currentLevel > 1)\n\n              if (outOfScope) {\n                return this.options.mode === 'deepest'\n              }\n\n              decorations.push(Decoration.node(pos, pos + node.nodeSize, {\n                class: this.options.className,\n              }))\n            })\n\n            return DecorationSet.create(doc, decorations)\n          },\n        },\n      }),\n    ]\n  },\n})\n"],
  "mappings": ";;;;;;;;;;;;;;AASa,IAAA,eAAe,UAAU,OAAqB;EACzD,MAAM;EAEN,aAAU;AACR,WAAO;MACL,WAAW;MACX,MAAM;;;EAIV,wBAAqB;AACnB,WAAO;MACL,IAAI,OAAO;QACT,KAAK,IAAI,UAAU,OAAO;QAC1B,OAAO;UACL,aAAa,CAAC,EAAE,KAAK,UAAS,MAAM;AAClC,kBAAM,EAAE,YAAY,UAAS,IAAK,KAAK;AACvC,kBAAM,EAAE,OAAM,IAAK;AACnB,kBAAM,cAA4B,CAAA;AAElC,gBAAI,CAAC,cAAc,CAAC,WAAW;AAC7B,qBAAO,cAAc,OAAO,KAAK,CAAA,CAAE;YACpC;AAGD,gBAAI,YAAY;AAEhB,gBAAI,KAAK,QAAQ,SAAS,WAAW;AACnC,kBAAI,YAAY,CAAC,MAAM,QAAO;AAC5B,oBAAI,KAAK,QAAQ;AACf;gBACD;AAED,sBAAM,YAAY,UAAU,OAAO,UAAW,MAAM,KAAK,WAAW;AAEpE,oBAAI,CAAC,WAAW;AACd,yBAAO;gBACR;AAED,6BAAa;cACf,CAAC;YACF;AAGD,gBAAI,eAAe;AAEnB,gBAAI,YAAY,CAAC,MAAM,QAAO;AAC5B,kBAAI,KAAK,QAAQ;AACf,uBAAO;cACR;AAED,oBAAM,YAAY,UAAU,OAAO,UAAW,MAAM,KAAK,WAAW;AAEpE,kBAAI,CAAC,WAAW;AACd,uBAAO;cACR;AAED,8BAAgB;AAEhB,oBAAM,aAAc,KAAK,QAAQ,SAAS,aAAa,YAAY,eAAe,KAC5E,KAAK,QAAQ,SAAS,gBAAgB,eAAe;AAE3D,kBAAI,YAAY;AACd,uBAAO,KAAK,QAAQ,SAAS;cAC9B;AAED,0BAAY,KAAK,WAAW,KAAK,KAAK,MAAM,KAAK,UAAU;gBACzD,OAAO,KAAK,QAAQ;cACrB,CAAA,CAAC;YACJ,CAAC;AAED,mBAAO,cAAc,OAAO,KAAK,WAAW;;QAE/C;OACF;;;AAGN,CAAA;",
  "names": []
}
