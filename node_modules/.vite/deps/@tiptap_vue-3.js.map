{
  "version": 3,
  "sources": ["../../@tiptap/extension-bubble-menu/src/bubble-menu-plugin.ts", "../../@tiptap/extension-bubble-menu/src/bubble-menu.ts", "../../@tiptap/extension-floating-menu/src/floating-menu-plugin.ts", "../../@tiptap/extension-floating-menu/src/floating-menu.ts", "../../@tiptap/vue-3/src/BubbleMenu.ts", "../../@tiptap/vue-3/src/Editor.ts", "../../@tiptap/vue-3/src/EditorContent.ts", "../../@tiptap/vue-3/src/FloatingMenu.ts", "../../@tiptap/vue-3/src/NodeViewContent.ts", "../../@tiptap/vue-3/src/NodeViewWrapper.ts", "../../@tiptap/vue-3/src/useEditor.ts", "../../@tiptap/vue-3/src/VueRenderer.ts", "../../@tiptap/vue-3/src/VueNodeViewRenderer.ts"],
  "sourcesContent": ["import {\n  Editor,\n  isNodeSelection,\n  isTextSelection,\n  posToDOMRect,\n} from '@tiptap/core'\nimport { EditorState, Plugin, PluginKey } from 'prosemirror-state'\nimport { EditorView } from 'prosemirror-view'\nimport tippy, { Instance, Props } from 'tippy.js'\n\nexport interface BubbleMenuPluginProps {\n  pluginKey: PluginKey | string,\n  editor: Editor,\n  element: HTMLElement,\n  tippyOptions?: Partial<Props>,\n  shouldShow?: ((props: {\n    editor: Editor,\n    view: EditorView,\n    state: EditorState,\n    oldState?: EditorState,\n    from: number,\n    to: number,\n  }) => boolean) | null,\n}\n\nexport type BubbleMenuViewProps = BubbleMenuPluginProps & {\n  view: EditorView,\n}\n\nexport class BubbleMenuView {\n  public editor: Editor\n\n  public element: HTMLElement\n\n  public view: EditorView\n\n  public preventHide = false\n\n  public tippy: Instance | undefined\n\n  public tippyOptions?: Partial<Props>\n\n  public shouldShow: Exclude<BubbleMenuPluginProps['shouldShow'], null> = ({\n    view,\n    state,\n    from,\n    to,\n  }) => {\n    const { doc, selection } = state\n    const { empty } = selection\n\n    // Sometime check for `empty` is not enough.\n    // Doubleclick an empty paragraph returns a node size of 2.\n    // So we check also for an empty text size.\n    const isEmptyTextBlock = !doc.textBetween(from, to).length\n      && isTextSelection(state.selection)\n\n    // When clicking on a element inside the bubble menu the editor \"blur\" event\n    // is called and the bubble menu item is focussed. In this case we should\n    // consider the menu as part of the ditor and keep showing the menu\n    const isChildOfMenu = this.element.contains(document.activeElement)\n\n    const hasEditorFocus = view.hasFocus() || isChildOfMenu\n\n    if (\n      !hasEditorFocus\n      || empty\n      || isEmptyTextBlock\n      || !this.editor.isEditable\n    ) {\n      return false\n    }\n\n    return true\n  }\n\n  constructor({\n    editor,\n    element,\n    view,\n    tippyOptions = {},\n    shouldShow,\n  }: BubbleMenuViewProps) {\n    this.editor = editor\n    this.element = element\n    this.view = view\n\n    if (shouldShow) {\n      this.shouldShow = shouldShow\n    }\n\n    this.element.addEventListener('mousedown', this.mousedownHandler, { capture: true })\n    this.view.dom.addEventListener('dragstart', this.dragstartHandler)\n    this.editor.on('focus', this.focusHandler)\n    this.editor.on('blur', this.blurHandler)\n    this.tippyOptions = tippyOptions\n    // Detaches menu content from its current parent\n    this.element.remove()\n    this.element.style.visibility = 'visible'\n  }\n\n  mousedownHandler = () => {\n    this.preventHide = true\n  }\n\n  dragstartHandler = () => {\n    this.hide()\n  }\n\n  focusHandler = () => {\n    // we use `setTimeout` to make sure `selection` is already updated\n    setTimeout(() => this.update(this.editor.view))\n  }\n\n  blurHandler = ({ event }: { event: FocusEvent }) => {\n    if (this.preventHide) {\n      this.preventHide = false\n\n      return\n    }\n\n    if (\n      event?.relatedTarget\n      && this.element.parentNode?.contains(event.relatedTarget as Node)\n    ) {\n      return\n    }\n\n    this.hide()\n  }\n\n  createTooltip() {\n    const { element: editorElement } = this.editor.options\n    const editorIsAttached = !!editorElement.parentElement\n\n    if (this.tippy || !editorIsAttached) {\n      return\n    }\n\n    this.tippy = tippy(editorElement, {\n      duration: 0,\n      getReferenceClientRect: null,\n      content: this.element,\n      interactive: true,\n      trigger: 'manual',\n      placement: 'top',\n      hideOnClick: 'toggle',\n      ...this.tippyOptions,\n    })\n\n    // maybe we have to hide tippy on its own blur event as well\n    if (this.tippy.popper.firstChild) {\n      (this.tippy.popper.firstChild as HTMLElement).addEventListener('blur', event => {\n        this.blurHandler({ event })\n      })\n    }\n  }\n\n  update(view: EditorView, oldState?: EditorState) {\n    const { state, composing } = view\n    const { doc, selection } = state\n    const isSame = oldState && oldState.doc.eq(doc) && oldState.selection.eq(selection)\n\n    if (composing || isSame) {\n      return\n    }\n\n    this.createTooltip()\n\n    // support for CellSelections\n    const { ranges } = selection\n    const from = Math.min(...ranges.map(range => range.$from.pos))\n    const to = Math.max(...ranges.map(range => range.$to.pos))\n\n    const shouldShow = this.shouldShow?.({\n      editor: this.editor,\n      view,\n      state,\n      oldState,\n      from,\n      to,\n    })\n\n    if (!shouldShow) {\n      this.hide()\n\n      return\n    }\n\n    this.tippy?.setProps({\n      getReferenceClientRect: this.tippyOptions?.getReferenceClientRect || (() => {\n        if (isNodeSelection(state.selection)) {\n          const node = view.nodeDOM(from) as HTMLElement\n\n          if (node) {\n            return node.getBoundingClientRect()\n          }\n        }\n\n        return posToDOMRect(view, from, to)\n      }),\n    })\n\n    this.show()\n  }\n\n  show() {\n    this.tippy?.show()\n  }\n\n  hide() {\n    this.tippy?.hide()\n  }\n\n  destroy() {\n    this.tippy?.destroy()\n    this.element.removeEventListener('mousedown', this.mousedownHandler, { capture: true })\n    this.view.dom.removeEventListener('dragstart', this.dragstartHandler)\n    this.editor.off('focus', this.focusHandler)\n    this.editor.off('blur', this.blurHandler)\n  }\n}\n\nexport const BubbleMenuPlugin = (options: BubbleMenuPluginProps) => {\n  return new Plugin({\n    key: typeof options.pluginKey === 'string'\n      ? new PluginKey(options.pluginKey)\n      : options.pluginKey,\n    view: view => new BubbleMenuView({ view, ...options }),\n  })\n}\n", "import { Extension } from '@tiptap/core'\n\nimport { BubbleMenuPlugin, BubbleMenuPluginProps } from './bubble-menu-plugin'\n\nexport type BubbleMenuOptions = Omit<BubbleMenuPluginProps, 'editor' | 'element'> & {\n  element: HTMLElement | null,\n}\n\nexport const BubbleMenu = Extension.create<BubbleMenuOptions>({\n  name: 'bubbleMenu',\n\n  addOptions() {\n    return {\n      element: null,\n      tippyOptions: {},\n      pluginKey: 'bubbleMenu',\n      shouldShow: null,\n    }\n  },\n\n  addProseMirrorPlugins() {\n    if (!this.options.element) {\n      return []\n    }\n\n    return [\n      BubbleMenuPlugin({\n        pluginKey: this.options.pluginKey,\n        editor: this.editor,\n        element: this.options.element,\n        tippyOptions: this.options.tippyOptions,\n        shouldShow: this.options.shouldShow,\n      }),\n    ]\n  },\n})\n", "import { Editor, posToDOMRect } from '@tiptap/core'\nimport { EditorState, Plugin, PluginKey } from 'prosemirror-state'\nimport { EditorView } from 'prosemirror-view'\nimport tippy, { Instance, Props } from 'tippy.js'\n\nexport interface FloatingMenuPluginProps {\n  pluginKey: PluginKey | string,\n  editor: Editor,\n  element: HTMLElement,\n  tippyOptions?: Partial<Props>,\n  shouldShow?: ((props: {\n    editor: Editor,\n    view: EditorView,\n    state: EditorState,\n    oldState?: EditorState,\n  }) => boolean) | null,\n}\n\nexport type FloatingMenuViewProps = FloatingMenuPluginProps & {\n  view: EditorView,\n}\n\nexport class FloatingMenuView {\n  public editor: Editor\n\n  public element: HTMLElement\n\n  public view: EditorView\n\n  public preventHide = false\n\n  public tippy: Instance | undefined\n\n  public tippyOptions?: Partial<Props>\n\n  public shouldShow: Exclude<FloatingMenuPluginProps['shouldShow'], null> = ({ view, state }) => {\n    const { selection } = state\n    const { $anchor, empty } = selection\n    const isRootDepth = $anchor.depth === 1\n    const isEmptyTextBlock = $anchor.parent.isTextblock\n      && !$anchor.parent.type.spec.code\n      && !$anchor.parent.textContent\n\n    if (\n      !view.hasFocus()\n      || !empty\n      || !isRootDepth\n      || !isEmptyTextBlock\n      || !this.editor.isEditable\n    ) {\n      return false\n    }\n\n    return true\n  }\n\n  constructor({\n    editor,\n    element,\n    view,\n    tippyOptions = {},\n    shouldShow,\n  }: FloatingMenuViewProps) {\n    this.editor = editor\n    this.element = element\n    this.view = view\n\n    if (shouldShow) {\n      this.shouldShow = shouldShow\n    }\n\n    this.element.addEventListener('mousedown', this.mousedownHandler, { capture: true })\n    this.editor.on('focus', this.focusHandler)\n    this.editor.on('blur', this.blurHandler)\n    this.tippyOptions = tippyOptions\n    // Detaches menu content from its current parent\n    this.element.remove()\n    this.element.style.visibility = 'visible'\n  }\n\n  mousedownHandler = () => {\n    this.preventHide = true\n  }\n\n  focusHandler = () => {\n    // we use `setTimeout` to make sure `selection` is already updated\n    setTimeout(() => this.update(this.editor.view))\n  }\n\n  blurHandler = ({ event }: { event: FocusEvent }) => {\n    if (this.preventHide) {\n      this.preventHide = false\n\n      return\n    }\n\n    if (\n      event?.relatedTarget\n      && this.element.parentNode?.contains(event.relatedTarget as Node)\n    ) {\n      return\n    }\n\n    this.hide()\n  }\n\n  createTooltip() {\n    const { element: editorElement } = this.editor.options\n    const editorIsAttached = !!editorElement.parentElement\n\n    if (this.tippy || !editorIsAttached) {\n      return\n    }\n\n    this.tippy = tippy(editorElement, {\n      duration: 0,\n      getReferenceClientRect: null,\n      content: this.element,\n      interactive: true,\n      trigger: 'manual',\n      placement: 'right',\n      hideOnClick: 'toggle',\n      ...this.tippyOptions,\n    })\n\n    // maybe we have to hide tippy on its own blur event as well\n    if (this.tippy.popper.firstChild) {\n      (this.tippy.popper.firstChild as HTMLElement).addEventListener('blur', event => {\n        this.blurHandler({ event })\n      })\n    }\n  }\n\n  update(view: EditorView, oldState?: EditorState) {\n    const { state } = view\n    const { doc, selection } = state\n    const { from, to } = selection\n    const isSame = oldState && oldState.doc.eq(doc) && oldState.selection.eq(selection)\n\n    if (isSame) {\n      return\n    }\n\n    this.createTooltip()\n\n    const shouldShow = this.shouldShow?.({\n      editor: this.editor,\n      view,\n      state,\n      oldState,\n    })\n\n    if (!shouldShow) {\n      this.hide()\n\n      return\n    }\n\n    this.tippy?.setProps({\n      getReferenceClientRect: this.tippyOptions?.getReferenceClientRect || (() => posToDOMRect(view, from, to)),\n    })\n\n    this.show()\n  }\n\n  show() {\n    this.tippy?.show()\n  }\n\n  hide() {\n    this.tippy?.hide()\n  }\n\n  destroy() {\n    this.tippy?.destroy()\n    this.element.removeEventListener('mousedown', this.mousedownHandler, { capture: true })\n    this.editor.off('focus', this.focusHandler)\n    this.editor.off('blur', this.blurHandler)\n  }\n}\n\nexport const FloatingMenuPlugin = (options: FloatingMenuPluginProps) => {\n  return new Plugin({\n    key: typeof options.pluginKey === 'string'\n      ? new PluginKey(options.pluginKey)\n      : options.pluginKey,\n    view: view => new FloatingMenuView({ view, ...options }),\n  })\n}\n", "import { Extension } from '@tiptap/core'\n\nimport { FloatingMenuPlugin, FloatingMenuPluginProps } from './floating-menu-plugin'\n\nexport type FloatingMenuOptions = Omit<FloatingMenuPluginProps, 'editor' | 'element'> & {\n  element: HTMLElement | null,\n}\n\nexport const FloatingMenu = Extension.create<FloatingMenuOptions>({\n  name: 'floatingMenu',\n\n  addOptions() {\n    return {\n      element: null,\n      tippyOptions: {},\n      pluginKey: 'floatingMenu',\n      shouldShow: null,\n    }\n  },\n\n  addProseMirrorPlugins() {\n    if (!this.options.element) {\n      return []\n    }\n\n    return [\n      FloatingMenuPlugin({\n        pluginKey: this.options.pluginKey,\n        editor: this.editor,\n        element: this.options.element,\n        tippyOptions: this.options.tippyOptions,\n        shouldShow: this.options.shouldShow,\n      }),\n    ]\n  },\n})\n", "import { BubbleMenuPlugin, BubbleMenuPluginProps } from '@tiptap/extension-bubble-menu'\nimport {\n  defineComponent,\n  h,\n  onBeforeUnmount,\n  onMounted,\n  PropType,\n  ref,\n} from 'vue'\n\nexport const BubbleMenu = defineComponent({\n  name: 'BubbleMenu',\n\n  props: {\n    pluginKey: {\n      // TODO: TypeScript breaks :(\n      // type: [String, Object as PropType<Exclude<BubbleMenuPluginProps['pluginKey'], string>>],\n      type: null,\n      default: 'bubbleMenu',\n    },\n\n    editor: {\n      type: Object as PropType<BubbleMenuPluginProps['editor']>,\n      required: true,\n    },\n\n    tippyOptions: {\n      type: Object as PropType<BubbleMenuPluginProps['tippyOptions']>,\n      default: () => ({}),\n    },\n\n    shouldShow: {\n      type: Function as PropType<Exclude<Required<BubbleMenuPluginProps>['shouldShow'], null>>,\n      default: null,\n    },\n  },\n\n  setup(props, { slots }) {\n    const root = ref<HTMLElement | null>(null)\n\n    onMounted(() => {\n      const {\n        pluginKey,\n        editor,\n        tippyOptions,\n        shouldShow,\n      } = props\n\n      editor.registerPlugin(BubbleMenuPlugin({\n        pluginKey,\n        editor,\n        element: root.value as HTMLElement,\n        tippyOptions,\n        shouldShow,\n      }))\n    })\n\n    onBeforeUnmount(() => {\n      const { pluginKey, editor } = props\n\n      editor.unregisterPlugin(pluginKey)\n    })\n\n    return () => h('div', { ref: root }, slots.default?.())\n  },\n})\n", "import { Editor as CoreEditor, EditorOptions } from '@tiptap/core'\nimport { EditorState, Plugin, PluginKey } from 'prosemirror-state'\nimport {\n  ComponentInternalInstance,\n  ComponentPublicInstance,\n  customRef,\n  markRaw,\n  reactive,\n  Ref,\n} from 'vue'\n\nimport { VueRenderer } from './VueRenderer'\n\nfunction useDebouncedRef<T>(value: T) {\n  return customRef<T>((track, trigger) => {\n    return {\n      get() {\n        track()\n        return value\n      },\n      set(newValue) {\n        // update state\n        value = newValue\n\n        // update view as soon as possible\n        requestAnimationFrame(() => {\n          requestAnimationFrame(() => {\n            trigger()\n          })\n        })\n      },\n    }\n  })\n}\n\nexport type ContentComponent = ComponentInternalInstance & {\n  ctx: ComponentPublicInstance,\n}\n\nexport class Editor extends CoreEditor {\n  private reactiveState: Ref<EditorState>\n\n  private reactiveExtensionStorage: Ref<Record<string, any>>\n\n  public vueRenderers = reactive<Map<string, VueRenderer>>(new Map())\n\n  public contentComponent: ContentComponent | null = null\n\n  constructor(options: Partial<EditorOptions> = {}) {\n    super(options)\n\n    this.reactiveState = useDebouncedRef(this.view.state)\n    this.reactiveExtensionStorage = useDebouncedRef(this.extensionStorage)\n\n    this.on('transaction', () => {\n      this.reactiveState.value = this.view.state\n      this.reactiveExtensionStorage.value = this.extensionStorage\n    })\n\n    return markRaw(this) // eslint-disable-line\n  }\n\n  get state() {\n    return this.reactiveState\n      ? this.reactiveState.value\n      : this.view.state\n  }\n\n  get storage() {\n    return this.reactiveExtensionStorage\n      ? this.reactiveExtensionStorage.value\n      : super.storage\n  }\n\n  /**\n   * Register a ProseMirror plugin.\n   */\n  public registerPlugin(plugin: Plugin, handlePlugins?: (newPlugin: Plugin, plugins: Plugin[]) => Plugin[]): void {\n    super.registerPlugin(plugin, handlePlugins)\n    this.reactiveState.value = this.view.state\n  }\n\n  /**\n   * Unregister a ProseMirror plugin.\n   */\n  public unregisterPlugin(nameOrPluginKey: string | PluginKey): void {\n    super.unregisterPlugin(nameOrPluginKey)\n    this.reactiveState.value = this.view.state\n  }\n}\n", "import {\n  DefineComponent,\n  defineComponent,\n  getCurrentInstance,\n  h,\n  nextTick,\n  onBeforeUnmount,\n  PropType,\n  Ref,\n  ref,\n  Teleport,\n  unref,\n  watchEffect,\n} from 'vue'\n\nimport { Editor } from './Editor'\n\nexport const EditorContent = defineComponent({\n  name: 'EditorContent',\n\n  props: {\n    editor: {\n      default: null,\n      type: Object as PropType<Editor>,\n    },\n  },\n\n  setup(props) {\n    const rootEl: Ref<Element | undefined> = ref()\n    const instance = getCurrentInstance()\n\n    watchEffect(() => {\n      const editor = props.editor\n\n      if (editor && editor.options.element && rootEl.value) {\n        nextTick(() => {\n          if (!rootEl.value || !editor.options.element.firstChild) {\n            return\n          }\n\n          const element = unref(rootEl.value)\n\n          rootEl.value.append(...editor.options.element.childNodes)\n\n          // @ts-ignore\n          editor.contentComponent = instance.ctx._\n\n          editor.setOptions({\n            element,\n          })\n\n          editor.createNodeViews()\n        })\n      }\n    })\n\n    onBeforeUnmount(() => {\n      const editor = props.editor\n\n      if (!editor) {\n        return\n      }\n\n      // destroy nodeviews before vue removes dom element\n      if (!editor.isDestroyed) {\n        editor.view.setProps({\n          nodeViews: {},\n        })\n      }\n\n      editor.contentComponent = null\n\n      if (!editor.options.element.firstChild) {\n        return\n      }\n\n      const newElement = document.createElement('div')\n\n      newElement.append(...editor.options.element.childNodes)\n\n      editor.setOptions({\n        element: newElement,\n      })\n    })\n\n    return { rootEl }\n  },\n\n  render() {\n    const vueRenderers: any[] = []\n\n    if (this.editor) {\n      this.editor.vueRenderers.forEach(vueRenderer => {\n        const node = h(\n          Teleport,\n          {\n            to: vueRenderer.teleportElement,\n            key: vueRenderer.id,\n          },\n          h(\n            vueRenderer.component as DefineComponent,\n            {\n              ref: vueRenderer.id,\n              ...vueRenderer.props,\n            },\n          ),\n        )\n\n        vueRenderers.push(node)\n      })\n    }\n\n    return h(\n      'div',\n      {\n        ref: (el: any) => { this.rootEl = el },\n      },\n      ...vueRenderers,\n    )\n  },\n})\n", "import { FloatingMenuPlugin, FloatingMenuPluginProps } from '@tiptap/extension-floating-menu'\nimport {\n  defineComponent,\n  h,\n  onBeforeUnmount,\n  onMounted,\n  PropType,\n  ref,\n} from 'vue'\n\nexport const FloatingMenu = defineComponent({\n  name: 'FloatingMenu',\n\n  props: {\n    pluginKey: {\n      // TODO: TypeScript breaks :(\n      // type: [String, Object as PropType<Exclude<FloatingMenuPluginProps['pluginKey'], string>>],\n      type: null,\n      default: 'floatingMenu',\n    },\n\n    editor: {\n      type: Object as PropType<FloatingMenuPluginProps['editor']>,\n      required: true,\n    },\n\n    tippyOptions: {\n      type: Object as PropType<FloatingMenuPluginProps['tippyOptions']>,\n      default: () => ({}),\n    },\n\n    shouldShow: {\n      type: Function as PropType<Exclude<Required<FloatingMenuPluginProps>['shouldShow'], null>>,\n      default: null,\n    },\n  },\n\n  setup(props, { slots }) {\n    const root = ref<HTMLElement | null>(null)\n\n    onMounted(() => {\n      const {\n        pluginKey,\n        editor,\n        tippyOptions,\n        shouldShow,\n      } = props\n\n      editor.registerPlugin(FloatingMenuPlugin({\n        pluginKey,\n        editor,\n        element: root.value as HTMLElement,\n        tippyOptions,\n        shouldShow,\n      }))\n    })\n\n    onBeforeUnmount(() => {\n      const { pluginKey, editor } = props\n\n      editor.unregisterPlugin(pluginKey)\n    })\n\n    return () => h('div', { ref: root }, slots.default?.())\n  },\n})\n", "import { defineComponent, h } from 'vue'\n\nexport const NodeViewContent = defineComponent({\n  props: {\n    as: {\n      type: String,\n      default: 'div',\n    },\n  },\n\n  render() {\n    return h(this.as, {\n      style: {\n        whiteSpace: 'pre-wrap',\n      },\n      'data-node-view-content': '',\n    })\n  },\n})\n", "import { defineComponent, h } from 'vue'\n\nexport const NodeViewWrapper = defineComponent({\n  props: {\n    as: {\n      type: String,\n      default: 'div',\n    },\n  },\n\n  inject: ['onDragStart', 'decorationClasses'],\n\n  render() {\n    return h(\n      this.as,\n      {\n        // @ts-ignore\n        class: this.decorationClasses,\n        style: {\n          whiteSpace: 'normal',\n        },\n        'data-node-view-wrapper': '',\n        // @ts-ignore (https://github.com/vuejs/vue-next/issues/3031)\n        onDragstart: this.onDragStart,\n      },\n      this.$slots.default?.(),\n    )\n  },\n})\n", "import { EditorOptions } from '@tiptap/core'\nimport { onBeforeUnmount, onMounted, shallowRef } from 'vue'\n\nimport { Editor } from './Editor'\n\nexport const useEditor = (options: Partial<EditorOptions> = {}) => {\n  const editor = shallowRef<Editor>()\n\n  onMounted(() => {\n    editor.value = new Editor(options)\n  })\n\n  onBeforeUnmount(() => {\n    editor.value?.destroy()\n  })\n\n  return editor\n}\n", "import { Editor } from '@tiptap/core'\nimport { Component, markRaw, reactive } from 'vue'\n\nimport { Editor as ExtendedEditor } from './Editor'\n\nexport interface VueRendererOptions {\n  editor: Editor,\n  props?: Record<string, any>,\n}\n\nexport class VueRenderer {\n  id: string\n\n  editor: ExtendedEditor\n\n  component: Component\n\n  teleportElement: Element\n\n  element: Element\n\n  props: Record<string, any>\n\n  constructor(component: Component, { props = {}, editor }: VueRendererOptions) {\n    this.id = Math.floor(Math.random() * 0xFFFFFFFF).toString()\n    this.editor = editor as ExtendedEditor\n    this.component = markRaw(component)\n    this.teleportElement = document.createElement('div')\n    this.element = this.teleportElement\n    this.props = reactive(props)\n    this.editor.vueRenderers.set(this.id, this)\n\n    if (this.editor.contentComponent) {\n      this.editor.contentComponent.update()\n\n      if (this.teleportElement.children.length !== 1) {\n        throw Error('VueRenderer doesn\u2019t support multiple child elements.')\n      }\n\n      this.element = this.teleportElement.firstElementChild as Element\n    }\n  }\n\n  get ref(): any {\n    return this.editor.contentComponent?.refs[this.id]\n  }\n\n  updateProps(props: Record<string, any> = {}): void {\n    Object\n      .entries(props)\n      .forEach(([key, value]) => {\n        this.props[key] = value\n      })\n  }\n\n  destroy(): void {\n    this.editor.vueRenderers.delete(this.id)\n  }\n}\n", "import {\n  NodeView,\n  NodeViewProps,\n  NodeViewRenderer,\n  NodeViewRendererOptions,\n  NodeViewRendererProps,\n} from '@tiptap/core'\nimport { Node as ProseMirrorNode } from 'prosemirror-model'\nimport { Decoration, NodeView as ProseMirrorNodeView } from 'prosemirror-view'\nimport {\n  Component,\n  defineComponent,\n  PropType,\n  provide,\n  Ref,\n  ref,\n} from 'vue'\n\nimport { Editor } from './Editor'\nimport { VueRenderer } from './VueRenderer'\n\nexport const nodeViewProps = {\n  editor: {\n    type: Object as PropType<NodeViewProps['editor']>,\n    required: true as const,\n  },\n  node: {\n    type: Object as PropType<NodeViewProps['node']>,\n    required: true as const,\n  },\n  decorations: {\n    type: Object as PropType<NodeViewProps['decorations']>,\n    required: true as const,\n  },\n  selected: {\n    type: Boolean as PropType<NodeViewProps['selected']>,\n    required: true as const,\n  },\n  extension: {\n    type: Object as PropType<NodeViewProps['extension']>,\n    required: true as const,\n  },\n  getPos: {\n    type: Function as PropType<NodeViewProps['getPos']>,\n    required: true as const,\n  },\n  updateAttributes: {\n    type: Function as PropType<NodeViewProps['updateAttributes']>,\n    required: true as const,\n  },\n  deleteNode: {\n    type: Function as PropType<NodeViewProps['deleteNode']>,\n    required: true as const,\n  },\n}\n\nexport interface VueNodeViewRendererOptions extends NodeViewRendererOptions {\n  update: ((props: {\n    oldNode: ProseMirrorNode,\n    oldDecorations: Decoration[],\n    newNode: ProseMirrorNode,\n    newDecorations: Decoration[],\n    updateProps: () => void,\n  }) => boolean) | null,\n}\n\nclass VueNodeView extends NodeView<Component, Editor, VueNodeViewRendererOptions> {\n\n  renderer!: VueRenderer\n\n  decorationClasses!: Ref<string>\n\n  mount() {\n    const props: NodeViewProps = {\n      editor: this.editor,\n      node: this.node,\n      decorations: this.decorations,\n      selected: false,\n      extension: this.extension,\n      getPos: () => this.getPos(),\n      updateAttributes: (attributes = {}) => this.updateAttributes(attributes),\n      deleteNode: () => this.deleteNode(),\n    }\n\n    const onDragStart = this.onDragStart.bind(this)\n\n    this.decorationClasses = ref(this.getDecorationClasses())\n\n    const extendedComponent = defineComponent({\n      extends: { ...this.component },\n      props: Object.keys(props),\n      template: (this.component as any).template,\n      setup: reactiveProps => {\n        provide('onDragStart', onDragStart)\n        provide('decorationClasses', this.decorationClasses)\n\n        return (this.component as any).setup?.(reactiveProps, {\n          expose: () => undefined,\n        })\n      },\n      // add support for scoped styles\n      // @ts-ignore\n      // eslint-disable-next-line\n      __scopeId: this.component.__scopeId,\n      // add support for CSS Modules\n      // @ts-ignore\n      // eslint-disable-next-line\n      __cssModules: this.component.__cssModules,\n    })\n\n    this.renderer = new VueRenderer(extendedComponent, {\n      editor: this.editor,\n      props,\n    })\n  }\n\n  get dom() {\n    if (!this.renderer.element.hasAttribute('data-node-view-wrapper')) {\n      throw Error('Please use the NodeViewWrapper component for your node view.')\n    }\n\n    return this.renderer.element as HTMLElement\n  }\n\n  get contentDOM() {\n    if (this.node.isLeaf) {\n      return null\n    }\n\n    const contentElement = this.dom.querySelector('[data-node-view-content]')\n\n    return (contentElement || this.dom) as HTMLElement | null\n  }\n\n  update(node: ProseMirrorNode, decorations: Decoration[]) {\n    const updateProps = (props?: Record<string, any>) => {\n      this.decorationClasses.value = this.getDecorationClasses()\n      this.renderer.updateProps(props)\n    }\n\n    if (typeof this.options.update === 'function') {\n      const oldNode = this.node\n      const oldDecorations = this.decorations\n\n      this.node = node\n      this.decorations = decorations\n\n      return this.options.update({\n        oldNode,\n        oldDecorations,\n        newNode: node,\n        newDecorations: decorations,\n        updateProps: () => updateProps({ node, decorations }),\n      })\n    }\n\n    if (node.type !== this.node.type) {\n      return false\n    }\n\n    if (node === this.node && this.decorations === decorations) {\n      return true\n    }\n\n    this.node = node\n    this.decorations = decorations\n\n    updateProps({ node, decorations })\n\n    return true\n  }\n\n  selectNode() {\n    this.renderer.updateProps({\n      selected: true,\n    })\n  }\n\n  deselectNode() {\n    this.renderer.updateProps({\n      selected: false,\n    })\n  }\n\n  getDecorationClasses() {\n    return this.decorations\n      // @ts-ignore\n      .map(item => item.type.attrs.class)\n      .flat()\n      .join(' ')\n  }\n\n  destroy() {\n    this.renderer.destroy()\n  }\n\n}\n\nexport function VueNodeViewRenderer(component: Component, options?: Partial<VueNodeViewRendererOptions>): NodeViewRenderer {\n  return (props: NodeViewRendererProps) => {\n    // try to get the parent component\n    // this is important for vue devtools to show the component hierarchy correctly\n    // maybe it\u2019s `undefined` because <editor-content> isn\u2019t rendered yet\n    if (!(props.editor as Editor).contentComponent) {\n      return {}\n    }\n\n    return new VueNodeView(component, props, options) as unknown as ProseMirrorNodeView\n  }\n}\n"],
  "mappings": "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",
  "names": ["view", "view", "BubbleMenu", "Editor", "CoreEditor", "FloatingMenu"]
}
